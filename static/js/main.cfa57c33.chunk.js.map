{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setMovies","useState","setMovie","setQuery","clicked","setClicked","error","setError","isLoading","setIsLoading","sameMovie","setSameMovie","handleFindMovie","event","a","preventDefault","data","Plot","Poster","Title","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","trim","onClick","currentMovies","find","mov","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfa57c33.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d95d1d85';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, {\n  ChangeEvent, Dispatch, FormEvent, SetStateAction, useState,\n} from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  setMovies: Dispatch<SetStateAction<Movie[]>>,\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [clicked, setClicked] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sameMovie, setSameMovie] = useState(false);\n\n  const handleFindMovie = async (event: FormEvent<HTMLFormElement>) => {\n    event?.preventDefault();\n    setClicked(true);\n    setIsLoading(true);\n    const data = await getMovie(query);\n\n    if (!('Error' in data)) {\n      setError(false);\n\n      const {\n        Plot, Poster, Title, imdbID,\n      } = data;\n\n      // eslint-disable-next-line\n      const defaultPic = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n      setMovie({\n        title: Title,\n        description: Plot,\n        imdbId: imdbID,\n        imgUrl: (Poster === 'N/A' ? defaultPic : Poster),\n        imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      });\n    } else {\n      setError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleMovieQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setQuery(event.target.value);\n    setSameMovie(false);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      setMovies((currentMovies) => {\n        if (!currentMovies.find(mov => mov.imdbId === movie.imdbId)) {\n          return ([\n            ...currentMovies,\n            movie,\n          ]);\n        }\n\n        setSameMovie(true);\n\n        return currentMovies;\n      });\n    }\n\n    setMovie(null);\n    setQuery('');\n    setClicked(false);\n    setError(false);\n  };\n\n  return (\n    <>\n      <form onSubmit={(event) => handleFindMovie(event)} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleMovieQuery}\n            />\n          </div>\n\n          {error\n          && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {sameMovie\n          && (\n            <p className=\"help is-danger\">\n              This movie has already been added to the list\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!query.trim()}\n            >\n              {!clicked\n                ? 'Find a movie'\n                : 'Search again'}\n            </button>\n          </div>\n          {movie\n          && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie\n      && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}